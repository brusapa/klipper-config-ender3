# A note on pin names: pins may be configured with a hardware name
# (such as "PA4") or with an Arduino alias name (such as "ar29" or
# "analog3"). In order to use Arduino names, the pin_map variable in
# the mcu section must be present and have a value of "arduino". Pin
# names may be preceded by an '!' to indicate that a reverse polarity
# should be used (eg, trigger on low instead of high). Input pins may
# be preceded by a '^' to indicate that a hardware pull-up resistor
# should be enabled for the pin. If the micro-controller supports
# pull-down resistors then an input pin may alternatively be preceded
# by a '~'.

######################################################################
# Axis steppers
######################################################################

# The stepper_x section is used to describe the stepper controlling
# the X axis in a cartesian robot.
[stepper_x]
step_pin: PD7
#   Step GPIO pin (triggered high). This parameter must be provided.
dir_pin: !PC5
#   Direction GPIO pin (high indicates positive direction). This
#   parameter must be provided.
enable_pin: !PD6
#   Enable pin (default is enable high; use ! to indicate enable
#   low). If this parameter is not provided then the stepper motor
#   driver must always be enabled.
step_distance: .0125
#   Distance in mm that each step causes the axis to travel. This
#   parameter must be provided.
endstop_pin: ^PC2
#   Endstop switch detection pin. This parameter must be provided for
#   the X, Y, and Z steppers on cartesian style printers.
position_endstop: 0
#   Location of the endstop (in mm). This parameter must be provided
#   for the X, Y, and Z steppers on cartesian style printers.
position_max: 235
#   Maximum valid distance (in mm) the user may command the stepper to
#   move to. This parameter must be provided for the X, Y, and Z
#   steppers on cartesian style printers.
homing_speed: 50
#   Maximum velocity (in mm/s) of the stepper when homing. The default
#   is 5mm/s.

# The stepper_y section is used to describe the stepper controlling
# the Y axis in a cartesian robot. It has the same settings as the
# stepper_x section.
[stepper_y]
step_pin: PC6
#   Step GPIO pin (triggered high). This parameter must be provided.
dir_pin: !PC7
#   Direction GPIO pin (high indicates positive direction). This
#   parameter must be provided.
enable_pin: !PD6
#   Enable pin (default is enable high; use ! to indicate enable
#   low). If this parameter is not provided then the stepper motor
#   driver must always be enabled.
step_distance: .0125
#   Distance in mm that each step causes the axis to travel. This
#   parameter must be provided.
endstop_pin: ^PC3
#   Endstop switch detection pin. This parameter must be provided for
#   the X, Y, and Z steppers on cartesian style printers.
position_endstop: -9
#   Location of the endstop (in mm). This parameter must be provided
#   for the X, Y, and Z steppers on cartesian style printers.
position_max: 235
#   Maximum valid distance (in mm) the user may command the stepper to
#   move to. This parameter must be provided for the X, Y, and Z
#   steppers on cartesian style printers.
position_min: -9
#   Minimum valid distance (in mm) the user may command the stepper to
#   move to. This parameter must be provided for the X, Y, and Z
#   steppers on cartesian style printers.
homing_speed: 50
#   Maximum velocity (in mm/s) of the stepper when homing. The default
#   is 5mm/s.

# The stepper_z section is used to describe the stepper controlling
# the Z axis in a cartesian robot. It has the same settings as the
# stepper_x section.
[stepper_z]
step_pin: PB3
#   Step GPIO pin (triggered high). This parameter must be provided.
dir_pin: PB2
#   Direction GPIO pin (high indicates positive direction). This
#   parameter must be provided.
enable_pin: !PA5
#   Enable pin (default is enable high; use ! to indicate enable
#   low). If this parameter is not provided then the stepper motor
#   driver must always be enabled.
step_distance: .0025
#   Distance in mm that each step causes the axis to travel. This
#   parameter must be provided.
endstop_pin: probe:z_virtual_endstop
#   Endstop switch detection pin. This parameter must be provided for
#   the X, Y, and Z steppers on cartesian style printers.
#position_endstop: 0.0
#   Location of the endstop (in mm). This parameter must be provided
#   for the X, Y, and Z steppers on cartesian style printers.
position_max: 250
#   Maximum valid distance (in mm) the user may command the stepper to
#   move to. This parameter must be provided for the X, Y, and Z
#   steppers on cartesian style printers.
position_min: -10
#   Minimum valid distance (in mm) the user may command the stepper to
#   move to. This parameter must be provided for the X, Y, and Z
#   steppers on cartesian style printers.

######################################################################
# Extruder control
######################################################################

# The extruder section is used to describe both the stepper
# controlling the printer extruder and the heater parameters for the
# nozzle. The stepper configuration has the same settings as the
# stepper_x section and the heater configuration has the same settings
# as the heater_bed section (described below).
[extruder]
max_extrude_only_distance: 100.0
#   Maximum length (in mm of raw filament) that a retraction or
#   extrude-only move may have. If a retraction or extrude-only move
#   requests a distance greater than this value it will cause an error
#   to be returned. The default is 50mm.
step_pin: PB1
#   Step GPIO pin (triggered high). This parameter must be provided.
dir_pin: !PB0
#   Direction GPIO pin (high indicates positive direction). This
#   parameter must be provided.
enable_pin: !PD6
#   Enable pin (default is enable high; use ! to indicate enable
#   low). If this parameter is not provided then the stepper motor
#   driver must always be enabled.
step_distance: 0.010438
#   Distance in mm that each step causes the filament to travel. This
#   parameter must be provided.
nozzle_diameter: 0.400
#   Diameter of the nozzle orifice (in mm). This parameter must be
#   provided.
filament_diameter: 1.750
#   The nominal diameter of the raw filament (in mm) as it enters the
#   extruder. This parameter must be provided.
heater_pin: PD5
#   PWM output pin controlling the heater. This parameter must be
#   provided.
sensor_type: EPCOS 100K B57560G104F
#   Type of sensor - common thermistors are "EPCOS 100K B57560G104F",
#   "ATC Semitec 104GT-2", "NTC 100K beta 3950", "Honeywell 100K
#   135-104LAG-J01", and "NTC 100K MGB18-104F39050L32". See the
#   example-extras.cfg file for other sensors. This parameter must be
#   provided.
sensor_pin: PA7
#   Analog input pin connected to the sensor. This parameter must be
#   provided.
#control: pid
#   Control algorithm (either pid or watermark). This parameter must
#   be provided.
#pid_Kp: 21.527
#   Kp is the "proportional" constant for the pid. This parameter must
#   be provided for PID heaters.
#pid_Ki: 1.063
#   Ki is the "integral" constant for the pid. This parameter must be
#   provided for PID heaters.
#pid_Kd: 108.982
#   Kd is the "derivative" constant for the pid. This parameter must
#   be provided for PID heaters.
min_temp: 0
max_temp: 250
#   The maximum range of valid temperatures (in Celsius) that the
#   heater must remain within. This controls a safety feature
#   implemented in the micro-controller code - should the measured
#   temperature ever fall outside this range then the micro-controller
#   will go into a shutdown state. This check can help detect some
#   heater and sensor hardware failures. Set this range just wide
#   enough so that reasonable temperatures do not result in an
#   error. These parameters must be provided.

######################################################################
# Heater bed control
######################################################################

# The heater_bed section describes a heated bed (if present - omit
# section if not present).
[heater_bed]
heater_pin: PD4
#   PWM output pin controlling the heater. This parameter must be
#   provided.
sensor_type: EPCOS 100K B57560G104F
#   Type of sensor - common thermistors are "EPCOS 100K B57560G104F",
#   "ATC Semitec 104GT-2", "NTC 100K beta 3950", "Honeywell 100K
#   135-104LAG-J01", and "NTC 100K MGB18-104F39050L32". See the
#   example-extras.cfg file for other sensors. This parameter must be
#   provided.
sensor_pin: PA6
#   Analog input pin connected to the sensor. This parameter must be
#   provided.
#control: pid
#   Control algorithm (either pid or watermark). This parameter must
#   be provided.
#pid_Kp: 54.027
#   Kp is the "proportional" constant for the pid. This parameter must
#   be provided for PID heaters.
#pid_Ki: 0.770
#   Ki is the "integral" constant for the pid. This parameter must be
#   provided for PID heaters.
#pid_Kd: 948.182
#   Kd is the "derivative" constant for the pid. This parameter must
#   be provided for PID heaters.
min_temp: 0
max_temp: 130
#   The maximum range of valid temperatures (in Celsius) that the
#   heater must remain within. This controls a safety feature
#   implemented in the micro-controller code - should the measured
#   temperature ever fall outside this range then the micro-controller
#   will go into a shutdown state. This check can help detect some
#   heater and sensor hardware failures. Set this range just wide
#   enough so that reasonable temperatures do not result in an
#   error. These parameters must be provided.

######################################################################
# Fan control
######################################################################

# Print cooling fan (omit section if fan not present).
[fan]
pin: PB4
#   PWM output pin controlling the fan. This parameter must be
#   provided.

######################################################################
# Micro-controller settings
######################################################################

# Micro-controller information.
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
#   The serial port to connect to the MCU. If unsure (or if it
#   changes) see the "Where's my serial port?" section of the FAQ. The
#   default is /dev/ttyS0

######################################################################
# High level printer settings
######################################################################

# The printer section controls high level printer settings.
[printer]
kinematics: cartesian
#   This option must be "cartesian" for cartesian printers.
max_velocity: 300
#   Maximum velocity (in mm/s) of the toolhead (relative to the
#   print). This parameter must be specified.
max_accel: 3000
#   Maximum acceleration (in mm/s^2) of the toolhead (relative to the
#   print). This parameter must be specified.
max_z_velocity: 5
#   For cartesian printers this sets the maximum velocity (in mm/s) of
#   movement along the z axis. This setting can be used to restrict
#   the maximum speed of the z stepper motor on cartesian
#   printers. The default is to use max_velocity for max_z_velocity.
max_z_accel: 100
#   For cartesian printers this sets the maximum acceleration (in
#   mm/s^2) of movement along the z axis. It limits the acceleration
#   of the z stepper motor on cartesian printers. The default is to
#   use max_accel for max_z_accel.

######################################################################
# Display support
######################################################################

# Support for a display attached to the micro-controller.
[display]
lcd_type: st7920
#   The type of LCD chip in use. This may be "hd44780" (which is used
#   in "RepRapDiscount 2004 Smart Controller" type displays), "st7920"
#   (which is used in "RepRapDiscount 12864 Full Graphic Smart
#   Controller" type displays), "uc1701" (which is used in "MKS Mini
#   12864" type displays), "ssd1306", or "sh1106". This parameter must
#   be provided.
cs_pin: PA3
sclk_pin: PA1
sid_pin: PC1
#   The pins connected to an st7920 type lcd. These parameters must be
#   provided when using an st7920 display.
encoder_pins: ^PD2, ^PD3
#   The pins connected to encoder. 2 pins must be provided when
#   using encoder. This parameter must be provided when using menu.
click_pin: ^!PC0
#   The pin connected to 'enter' button or encoder 'click'. This parameter
#   must be provided when using menu. The presence of an 'analog_range_click_pin'
#   config parameter turns this parameter from digital to analog.

######################################################################
# Bed leveling support
######################################################################

# Mesh Bed Leveling. One may define a [bed_mesh] config section
# to enable move transformations that offset the z axis based
# on a mesh generated from probed points. Note that bed_mesh
# and bed_tilt are incompatible, both cannot be defined.  When
# using a probe to home the z-axis, it is recommended to define
# a [homing_override] section in printer.cfg to home toward the
# center of the print area.
#
#  Visual Examples:
#   rectangular bed, probe_count = 3,3:
#               x---x---x (max_point)
#               |
#               x---x---x
#                       |
#   (min_point) x---x---x
#
[bed_mesh]
speed: 100
#   The speed (in mm/s) of non-probing moves during the
#   calibration. The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
mesh_min: 55,30
#   Defines the minimum x,y coodinate of the mesh for rectangular beds.  This
#   coordinate is relative to the probe's location. This will be the first
#   point probed, nearest to the origin. This parameter must be provided for
#   rectangular beds.
mesh_max: 180,205
#   Defines the maximum x,y coordinate of the mesh for rectangular beds.
#   Adheres to the same principle as mesh_min, however this will be the
#   furthest point probed from the bed's origin. This parameter must be
#   provided for rectangular beds.
probe_count: 3,3
#   For rectangular beds, this is a comma separate pair of integer
#   values (X,Y) defining the number of points to probe along each axis.
#   A single value is also valid, in which case that value will be applied
#   to both axes.  Default is 3,3.

# Tool to help adjust bed screws tilt using Z probe. One may define a
# [screws_tilt_adjust] config section to enable a SCREWS_TILT_CALCULATE
# g-code command.
#[screws_tilt_adjust]
#screw1: 100,100
#   The X,Y coordinate of the first bed leveling screw. This is a
#   position to command the nozzle to that is directly above the bed
#   screw (or as close as possible while still being above the bed).
#   This is the base screw used in calculations.
#   This parameter must be provided.
#screw1_name: tornillo_caja_electronica
#   An arbitrary name for the given screw. This name is displayed when
#   the helper script runs. The default is to use a name based upon
#   the screw XY location.
#screw2:
#screw2_name: tornillo_pantalla
#screw3:
#screw3_name: tornillo_fuente_alimentacion
#screw4:
#screw4_name: tornillo_cables_trasero
#...
#   Additional bed leveling screws. At least two screws must be
#   defined.
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#screw_thread: CW-M3
#   The type of screw used for bed level, M3, M4 or M5 and the
#   direction of the knob used to level the bed, clockwise decrease
#   counter-clockwise decrease.
#   Accepted values: CW-M3, CCW-M3, CW-M4, CCW-M4, CW-M5, CCW-M5.
#   Default value is CW-M3, most printers use an M3 screw and
#   turning the knob clockwise decrease distance.

######################################################################
# Customized homing
######################################################################

# Safe Z homing. One may use this mechanism to home the Z axis at a
# specific XY coordinate. This is useful if the toolhead, for example
# has to move to the center of the bed before Z can be homed.
#[safe_z_home]
#home_xy_position:
#   A X,Y coordinate (e.g. 100,100) where the Z homing should be
#   performed. This parameter must be provided.
#speed: 50.0
#   Speed at which the toolhead is moved to the safe Z home coordinate.
#   The default is 50 mm/s
#z_hop:
#   Lift the Z axis prior to homing. This is applied to any homing
#   command, even if it doesn't home the Z axis. If the Z axis is
#   already homed and the current Z position is less than z_hop, then
#   this will lift the head to a height of z_hop. If the Z axis is not
#   already homed, then prior to any XY homing movement the Z axis
#   boundary checks are disabled and the head is lifted by z_hop. If
#   z_hop is specified, be sure to home the Z immediately after any XY
#   home requests so that the Z boundary checks are accurate. The
#   default is to not implement Z hop.
#z_hop_speed: 20.0
#   Speed at which the Z axis is lifted prior to homing. The default is 20mm/s.
#move_to_previous: False
#   When set to True, xy are reset to their previous positions after z homing.
#   The default is False.


# Homing override. One may use this mechanism to run a series of
# g-code commands in place of a G28 found in the normal g-code input.
# This may be useful on printers that require a specific procedure to
# home the machine.
[homing_override]
gcode:
    G90
    G1 Z10 F6000
    G28 X Y
    G1 X172.5 Y139.5 F6000
    G28 Z0
    G1 X172.5 Y139.5 Z10
#   A list of G-Code commands to execute in place of G28 commands
#   found in the normal g-code input. See docs/Command_Templates.md
#   for G-Code format. If a G28 is contained in this list of commands
#   then it will invoke the normal homing procedure for the printer.
#   The commands listed here must home all axes. This parameter must
#   be provided.
axes: z
#   The axes to override. For example, if this is set to "z" then the
#   override script will only be run when the z axis is homed (eg, via
#   a "G28" or "G28 Z0" command). Note, the override script should
#   still home all axes. The default is "xyz" which causes the
#   override script to be run in place of all G28 commands.
#set_position_x:
#set_position_y:
set_position_z: 6
#   If specified, the printer will assume the axis is at the specified
#   position prior to running the above g-code commands. Setting this
#   disables homing checks for that axis. This may be useful if the
#   head must move prior to invoking the normal G28 mechanism for an
#   axis. The default is to not force a position for an axis.

######################################################################
# Bed probing hardware
######################################################################

# BLTouch probe. One may define this section (instead of a probe
# section) to enable a BLTouch probe. See the docs/BLTouch.md guide
# for further information on configuring a BLTouch. A virtual
# "probe:z_virtual_endstop" pin is also created (see the "probe"
# section above for the details).
[bltouch]
sensor_pin: ^PC4
#   Pin connected to the BLTouch sensor pin. This parameter must be
#   provided.
control_pin: PA4
#   Pin connected to the BLTouch control pin. This parameter must be
#   provided.
x_offset: -55.0
#   The distance (in mm) between the probe and the nozzle along the
#   x-axis. The default is 0.
y_offset: -13.0
#   The distance (in mm) between the probe and the nozzle along the
#   y-axis. The default is 0.
#z_offset: 2.53
#   The distance (in mm) between the bed and the nozzle when the probe
#   triggers. This parameter must be provided.
speed: 5.0
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
samples: 2
#   The number of times to probe each point. The probed z-values will
#   be averaged. The default is to probe 1 time.
sample_retract_dist: 3.0
#   The distance (in mm) to lift the toolhead between each sample (if
#   sampling more than once). The default is 2mm.

[gcode_macro G29]
gcode:
    G28
    G1 Z10 F600
    BED_MESH_CALIBRATE

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.517
#*# pid_ki = 1.656
#*# pid_kd = 816.036
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.801
#*# pid_ki = 1.410
#*# pid_kd = 118.038
#*#
#*# [bltouch]
#*# z_offset = 1.179
